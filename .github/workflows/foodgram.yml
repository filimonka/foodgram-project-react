name: Foodgram workflow

on: [push]

jobs:
  login_to_docker_hub_and_build:
    name: Login and pull Docker image from Docker Hub
    runs-on: ubuntu-latest
    steps: 
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

  deploy:
    runs-on: ubuntu-latest
    needs: login_to_docker_hub_and_build
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker compose stop
            sudo docker compose rm backend
            touch nginx/.env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> nginx/.env
            echo DB_NAME=${{ secrets.DB_NAME }} >> nginx/.env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> nginx/.env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> nginx/.env
            echo DB_HOST=${{ secrets.DB_HOST }} >> nginx/.env
            echo DB_PORT=${{ secrets.DB_PORT }} >> nginx/.env
            
            sudo docker compose up -d
            sudo docker compose exec -T backend python manage.py migrate
            sudo docker compose exec -T backend python manage.py collectstatic --no-input
            sudo docker compose exec -T backend python manage.py loaddata data.json

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} обновление установлено.